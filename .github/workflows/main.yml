name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Docker
        run: |
          # Install Docker and Docker Compose
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          
          # Verify Docker Compose installation
          docker-compose --version

      - name: Set Up Docker Compose
        run: |
          # Create a temporary .env file from GitHub Secrets
          echo "MONGO_ROOT_USER=${{ secrets.MONGO_ROOT_USER }}" >> .env
          echo "MONGO_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }}" >> .env
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "AWS_S3_URL=${{ secrets.AWS_S3_URL }}" >> .env
          echo "LOCAL_URL=mongodb://mongodb:27017/sharedule" >> .env  # Change for Docker setup

          # Start Docker containers
          docker-compose up -d

      - name: Wait for MongoDB to Start
        run: sleep 10  # Give MongoDB time to start

      - name: Run Backend Unit Tests
        run: |
          docker exec my-backend-container ./gradlew test

      - name: Shut Down Docker Compose
        run: docker-compose down
