name: CI Pipeline

on:
  push:
    branches:
      - containerization
  pull_request:
    branches:
      - containerization

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set MongoDB environment variables
        run: |
          echo "MONGO_ROOT_USER=${{ secrets.MONGO_ROOT_USER }}" >> $GITHUB_ENV
          echo "MONGO_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }}" >> $GITHUB_ENV
          
      - name: Install Docker
        run: |
          sudo apt-get remove containerd.io
          sudo apt install docker.io docker-compose -y
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Verify Docker installation
        run: |
          docker --version
          docker-compose --version

      - name: Build Backend Image
        run: |
          docker build ./backend --file ./backend/Dockerfile --tag backend-image:$(date +%s)

      - name: Build Frontend Image
        run: |
          docker build ./frontend --file ./frontend/Dockerfile --tag frontend-image:$(date +%s)
          
      - name: Verify current directory
        run: |
          pwd
          ls -la

      - name: Run Docker Compose from root
        run: |
          docker-compose -f docker-compose.yml up -d
          
      - name: Check if Backend Container is Running
        run: |
          docker ps -a

      - name: Check docker logs
        run: |
          docker-compose logs backend

      - name: Check Backend Logs
        run: docker logs my-backend-container
        
      - name: Install curl in Backend Container
        run: |
          docker exec my-backend-container apt-get update
          docker exec my-backend-container apt-get install -y curl

      - name: Wait for Backend Container to be Ready
        run: |
          until docker exec my-backend-container curl --silent --fail http://localhost:8080/health; do
            echo "Waiting for backend to be ready..."
            sleep 10  # Sleep a bit before retrying
          done

      - name: Wait for MongoDB to Start
        run: sleep 10

      - name: Run Backend Unit Tests
        run: |
          docker exec my-backend-container mvn test

      - name: Shut Down Docker Compose
        run: |
          docker-compose -f ../docker-compose.yml down
